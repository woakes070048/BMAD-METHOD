name: "doctype-template"
title: "ERPNext DocType Template"
description: "Template for creating ERPNext DocTypes with proper structure and validation"
version: "1.0.0"

parameters:
  doctype_name:
    type: "string"
    required: true
    description: "Name of the DocType (PascalCase)"
  module_name:
    type: "string"
    required: true
    description: "Module where DocType will be created"
    default: "Custom"
  app_name:
    type: "string"
    required: true
    description: "App name where DocType belongs"
  naming_rule:
    type: "string"
    required: false
    description: "Naming rule for the DocType"
    default: "Autoincrement"
    options:
      - "Autoincrement"
      - "By fieldname"
      - "Prompt"
      - "Random"
  title_field:
    type: "string"
    required: false
    description: "Field to use as title"
  is_submittable:
    type: "boolean"
    required: false
    default: false
    description: "Whether the DocType is submittable"
  fields:
    type: "array"
    required: true
    description: "List of fields for the DocType"
    items:
      fieldname:
        type: "string"
        required: true
      fieldtype:
        type: "string"
        required: true
      label:
        type: "string"
        required: true
      required:
        type: "boolean"
        default: false
      options:
        type: "string"
        required: false

templates:
  doctype_json: |
    {
      "doctype": "DocType",
      "name": "{{doctype_name}}",
      "module": "{{module_name}}",
      "naming_rule": "{{naming_rule}}",
      "title_field": "{{title_field}}",
      "is_submittable": {{is_submittable}},
      "track_changes": 1,
      "permissions": [
        {
          "role": "System Manager",
          "read": 1,
          "write": 1,
          "create": 1,
          "delete": 1
        }
      ],
      "fields": [
        {{#each fields}}
        {
          "fieldname": "{{fieldname}}",
          "fieldtype": "{{fieldtype}}",
          "label": "{{label}}",
          "reqd": {{required}},
          "options": "{{options}}"
        }{{#unless @last}},{{/unless}}
        {{/each}}
      ]
    }
  
  controller_py: |
    import frappe
    from frappe.model.document import Document
    {{#if is_submittable}}
    from frappe import _
    {{/if}}
    
    class {{doctype_name}}(Document):
        def validate(self):
            """Validation logic before saving"""
            self.validate_required_fields()
            self.set_defaults()
        
        def before_save(self):
            """Pre-save operations"""
            pass
        
        def after_insert(self):
            """Post-creation operations"""
            self.create_related_documents()
        
        {{#if is_submittable}}
        def on_submit(self):
            """Actions on document submission"""
            self.update_linked_documents()
        
        def on_cancel(self):
            """Actions on document cancellation"""
            self.revert_linked_documents()
        {{/if}}
        
        @frappe.whitelist()
        def custom_method(self):
            """Custom API method"""
            return {"status": "success", "doctype": self.doctype, "name": self.name}
        
        def validate_required_fields(self):
            """Custom validation for required fields"""
            pass
        
        def set_defaults(self):
            """Set default values"""
            pass
        
        def create_related_documents(self):
            """Create related documents after insertion"""
            pass
        
        {{#if is_submittable}}
        def update_linked_documents(self):
            """Update linked documents on submission"""
            pass
        
        def revert_linked_documents(self):
            """Revert linked documents on cancellation"""
            pass
        {{/if}}

environment:
  bench_path: "/home/frappe/frappe-bench"
  site: "prima-erpnext.pegashosting.com"

instructions:
  creation:
    - "Navigate to {{app_name}} app directory"
    - "Create module directory if it doesn't exist"
    - "Create DocType directory structure"
    - "Generate {{doctype_name}}.json from template"
    - "Generate {{doctype_name}}.py controller from template"
    - "Run bench migrate to create in database"
    - "Test DocType creation and validation"
  
  validation:
    - "Verify DocType follows Frappe naming conventions"
    - "Check field types are valid"
    - "Ensure required permissions are set"
    - "Test with existing apps (docflow, n8n_integration) if integration needed"
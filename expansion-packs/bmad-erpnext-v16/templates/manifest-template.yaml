---
template_name: "Manifest Template"
template_type: "pwa_manifest"
version: "1.0.0"
description: "Template for creating Progressive Web App manifests for ERPNext applications"

# Basic manifest structure
basic_manifest:
  template: |
    {
      "name": "{APP_FULL_NAME}",
      "short_name": "{APP_SHORT_NAME}",
      "description": "{APP_DESCRIPTION}",
      "start_url": "/",
      "display": "standalone",
      "orientation": "portrait-primary",
      "theme_color": "{THEME_COLOR}",
      "background_color": "{BACKGROUND_COLOR}",
      "scope": "/",
      "lang": "en",
      "dir": "ltr",
      "icons": [
        {
          "src": "/images/icons/icon-72x72.png",
          "sizes": "72x72",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-96x96.png",
          "sizes": "96x96",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-128x128.png",
          "sizes": "128x128",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-144x144.png",
          "sizes": "144x144",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-152x152.png",
          "sizes": "152x152",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-192x192.png",
          "sizes": "192x192",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-384x384.png",
          "sizes": "384x384",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-512x512.png",
          "sizes": "512x512",
          "type": "image/png",
          "purpose": "any"
        }
      ]
    }

# Advanced manifest with additional features
advanced_manifest:
  template: |
    {
      "name": "{APP_FULL_NAME}",
      "short_name": "{APP_SHORT_NAME}",
      "description": "{APP_DESCRIPTION}",
      "version": "{APP_VERSION}",
      "start_url": "/",
      "display": "standalone",
      "display_override": ["window-controls-overlay", "minimal-ui"],
      "orientation": "portrait-primary",
      "theme_color": "{THEME_COLOR}",
      "background_color": "{BACKGROUND_COLOR}",
      "scope": "/",
      "lang": "en",
      "dir": "ltr",
      "prefer_related_applications": false,
      "categories": ["business", "productivity", "finance"],
      "iarc_rating_id": "{IARC_RATING_ID}",
      "screenshots": [
        {
          "src": "/images/screenshots/desktop-1.png",
          "sizes": "1280x720",
          "type": "image/png",
          "platform": "wide",
          "label": "Dashboard view on desktop"
        },
        {
          "src": "/images/screenshots/mobile-1.png",
          "sizes": "390x844",
          "type": "image/png",
          "platform": "narrow",
          "label": "Mobile interface"
        }
      ],
      "icons": [
        {
          "src": "/images/icons/icon-72x72.png",
          "sizes": "72x72",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-96x96.png",
          "sizes": "96x96",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-128x128.png",
          "sizes": "128x128",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-144x144.png",
          "sizes": "144x144",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-152x152.png",
          "sizes": "152x152",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-192x192.png",
          "sizes": "192x192",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-384x384.png",
          "sizes": "384x384",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/icon-512x512.png",
          "sizes": "512x512",
          "type": "image/png",
          "purpose": "any"
        },
        {
          "src": "/images/icons/maskable-icon-72x72.png",
          "sizes": "72x72",
          "type": "image/png",
          "purpose": "maskable"
        },
        {
          "src": "/images/icons/maskable-icon-96x96.png",
          "sizes": "96x96",
          "type": "image/png",
          "purpose": "maskable"
        },
        {
          "src": "/images/icons/maskable-icon-128x128.png",
          "sizes": "128x128",
          "type": "image/png",
          "purpose": "maskable"
        },
        {
          "src": "/images/icons/maskable-icon-144x144.png",
          "sizes": "144x144",
          "type": "image/png",
          "purpose": "maskable"
        },
        {
          "src": "/images/icons/maskable-icon-152x152.png",
          "sizes": "152x152",
          "type": "image/png",
          "purpose": "maskable"
        },
        {
          "src": "/images/icons/maskable-icon-192x192.png",
          "sizes": "192x192",
          "type": "image/png",
          "purpose": "maskable"
        },
        {
          "src": "/images/icons/maskable-icon-384x384.png",
          "sizes": "384x384",
          "type": "image/png",
          "purpose": "maskable"
        },
        {
          "src": "/images/icons/maskable-icon-512x512.png",
          "sizes": "512x512",
          "type": "image/png",
          "purpose": "maskable"
        }
      ],
      "shortcuts": [
        {
          "name": "Dashboard",
          "short_name": "Dashboard",
          "description": "View application dashboard",
          "url": "/dashboard",
          "icons": [
            {
              "src": "/images/shortcuts/dashboard-96x96.png",
              "sizes": "96x96",
              "type": "image/png"
            }
          ]
        },
        {
          "name": "Create New",
          "short_name": "New",
          "description": "Create new document",
          "url": "/new",
          "icons": [
            {
              "src": "/images/shortcuts/new-96x96.png",
              "sizes": "96x96",
              "type": "image/png"
            }
          ]
        },
        {
          "name": "Reports",
          "short_name": "Reports",
          "description": "View reports",
          "url": "/reports",
          "icons": [
            {
              "src": "/images/shortcuts/reports-96x96.png",
              "sizes": "96x96",
              "type": "image/png"
            }
          ]
        }
      ],
      "edge_side_panel": {
        "preferred_width": 400
      },
      "launch_handler": {
        "client_mode": "navigate-existing"
      },
      "protocol_handlers": [
        {
          "protocol": "web+{app_protocol}",
          "url": "/handle-protocol?url=%s"
        }
      ],
      "share_target": {
        "action": "/share",
        "method": "POST",
        "enctype": "multipart/form-data",
        "params": {
          "title": "title",
          "text": "text",
          "url": "url",
          "files": [
            {
              "name": "files",
              "accept": ["image/*", ".pdf", ".doc", ".docx"]
            }
          ]
        }
      },
      "file_handlers": [
        {
          "action": "/file-handler",
          "accept": {
            "application/pdf": [".pdf"],
            "text/csv": [".csv"],
            "application/vnd.ms-excel": [".xls"],
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": [".xlsx"]
          }
        }
      ]
    }

# Icon specifications
icon_specifications:
  required_sizes: |
    # Required Icon Sizes for PWA
    
    ## Standard Icons (purpose: "any")
    - 72x72 - Android Chrome
    - 96x96 - Android Chrome
    - 128x128 - Android Chrome, Windows
    - 144x144 - Windows
    - 152x152 - iOS Safari
    - 192x192 - Android Chrome (minimum required)
    - 384x384 - Android Chrome
    - 512x512 - Android Chrome (recommended)
    
    ## Maskable Icons (purpose: "maskable")
    - 192x192 - Android adaptive icons
    - 512x512 - Android adaptive icons
    
    ## Apple Touch Icons (separate meta tags)
    - 180x180 - iOS Safari
    - 167x167 - iPad Pro
    - 152x152 - iPad
    - 120x120 - iPhone
    
    ## Favicon Sizes
    - 16x16 - Browser tab
    - 32x32 - Browser tab
    - 48x48 - Windows

  icon_generation_script: |
    #!/bin/bash
    # Generate all required PWA icons from a source image
    
    SOURCE_IMAGE="source-icon.png"
    OUTPUT_DIR="public/images/icons"
    
    # Create output directory
    mkdir -p "$OUTPUT_DIR"
    
    # Standard icons
    convert "$SOURCE_IMAGE" -resize 72x72 "$OUTPUT_DIR/icon-72x72.png"
    convert "$SOURCE_IMAGE" -resize 96x96 "$OUTPUT_DIR/icon-96x96.png"
    convert "$SOURCE_IMAGE" -resize 128x128 "$OUTPUT_DIR/icon-128x128.png"
    convert "$SOURCE_IMAGE" -resize 144x144 "$OUTPUT_DIR/icon-144x144.png"
    convert "$SOURCE_IMAGE" -resize 152x152 "$OUTPUT_DIR/icon-152x152.png"
    convert "$SOURCE_IMAGE" -resize 192x192 "$OUTPUT_DIR/icon-192x192.png"
    convert "$SOURCE_IMAGE" -resize 384x384 "$OUTPUT_DIR/icon-384x384.png"
    convert "$SOURCE_IMAGE" -resize 512x512 "$OUTPUT_DIR/icon-512x512.png"
    
    # Maskable icons (with padding)
    convert "$SOURCE_IMAGE" -resize 58x58 -gravity center -extent 72x72 -background transparent "$OUTPUT_DIR/maskable-icon-72x72.png"
    convert "$SOURCE_IMAGE" -resize 77x77 -gravity center -extent 96x96 -background transparent "$OUTPUT_DIR/maskable-icon-96x96.png"
    convert "$SOURCE_IMAGE" -resize 102x102 -gravity center -extent 128x128 -background transparent "$OUTPUT_DIR/maskable-icon-128x128.png"
    convert "$SOURCE_IMAGE" -resize 115x115 -gravity center -extent 144x144 -background transparent "$OUTPUT_DIR/maskable-icon-144x144.png"
    convert "$SOURCE_IMAGE" -resize 122x122 -gravity center -extent 152x152 -background transparent "$OUTPUT_DIR/maskable-icon-152x152.png"
    convert "$SOURCE_IMAGE" -resize 154x154 -gravity center -extent 192x192 -background transparent "$OUTPUT_DIR/maskable-icon-192x192.png"
    convert "$SOURCE_IMAGE" -resize 307x307 -gravity center -extent 384x384 -background transparent "$OUTPUT_DIR/maskable-icon-384x384.png"
    convert "$SOURCE_IMAGE" -resize 410x410 -gravity center -extent 512x512 -background transparent "$OUTPUT_DIR/maskable-icon-512x512.png"
    
    # Apple touch icons
    convert "$SOURCE_IMAGE" -resize 180x180 "$OUTPUT_DIR/apple-touch-icon-180x180.png"
    convert "$SOURCE_IMAGE" -resize 167x167 "$OUTPUT_DIR/apple-touch-icon-167x167.png"
    convert "$SOURCE_IMAGE" -resize 152x152 "$OUTPUT_DIR/apple-touch-icon-152x152.png"
    convert "$SOURCE_IMAGE" -resize 120x120 "$OUTPUT_DIR/apple-touch-icon-120x120.png"
    
    # Favicons
    convert "$SOURCE_IMAGE" -resize 16x16 "$OUTPUT_DIR/favicon-16x16.png"
    convert "$SOURCE_IMAGE" -resize 32x32 "$OUTPUT_DIR/favicon-32x32.png"
    convert "$SOURCE_IMAGE" -resize 48x48 "$OUTPUT_DIR/favicon-48x48.png"
    
    # Generate ICO file
    convert "$OUTPUT_DIR/favicon-16x16.png" "$OUTPUT_DIR/favicon-32x32.png" "$OUTPUT_DIR/favicon-48x48.png" "public/favicon.ico"
    
    echo "Icons generated successfully!"

# Display modes
display_modes:
  options: |
    # PWA Display Modes
    
    ## fullscreen
    - Opens the web app without any browser UI
    - Uses the entire display area
    - Best for games or immersive experiences
    
    ## standalone
    - Opens the web app to look like a native app
    - Removes browser UI but keeps status bar
    - Most common choice for PWAs
    
    ## minimal-ui
    - Similar to standalone but includes minimal browser controls
    - Includes back/forward buttons and reload
    - Good compromise between app-like and web-like
    
    ## browser
    - Opens in a normal browser tab
    - Fallback option
    - Not recommended for PWAs
    
    ## window-controls-overlay (experimental)
    - Allows custom title bar
    - App can draw content in title bar area
    - Only supported in some browsers

  recommended_settings: |
    {
      "display": "standalone",
      "display_override": ["window-controls-overlay", "minimal-ui"]
    }

# Platform-specific configurations
platform_specific:
  ios_meta_tags: |
    <!-- iOS Safari specific meta tags -->
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="default">
    <meta name="apple-mobile-web-app-title" content="{APP_SHORT_NAME}">
    
    <!-- Apple Touch Icons -->
    <link rel="apple-touch-icon" sizes="180x180" href="/images/icons/apple-touch-icon-180x180.png">
    <link rel="apple-touch-icon" sizes="167x167" href="/images/icons/apple-touch-icon-167x167.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/images/icons/apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/images/icons/apple-touch-icon-120x120.png">
    
    <!-- iOS Splash Screens -->
    <link rel="apple-touch-startup-image" href="/images/splash/launch-640x1136.png" media="(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)">
    <link rel="apple-touch-startup-image" href="/images/splash/launch-750x1294.png" media="(device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)">
    <link rel="apple-touch-startup-image" href="/images/splash/launch-1242x2148.png" media="(device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)">

  windows_meta_tags: |
    <!-- Windows specific meta tags -->
    <meta name="msapplication-TileColor" content="{THEME_COLOR}">
    <meta name="msapplication-TileImage" content="/images/icons/icon-144x144.png">
    <meta name="msapplication-config" content="/browserconfig.xml">
    
    <!-- Windows browserconfig.xml -->
    <?xml version="1.0" encoding="utf-8"?>
    <browserconfig>
      <msapplication>
        <tile>
          <square70x70logo src="/images/icons/icon-70x70.png"/>
          <square150x150logo src="/images/icons/icon-150x150.png"/>
          <square310x310logo src="/images/icons/icon-310x310.png"/>
          <wide310x150logo src="/images/icons/icon-310x150.png"/>
          <TileColor>{THEME_COLOR}</TileColor>
        </tile>
      </msapplication>
    </browserconfig>

  android_configuration: |
    <!-- Android Chrome specific -->
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="theme-color" content="{THEME_COLOR}">
    
    <!-- Optional: Custom splash screen for Android -->
    <style>
      .splash-screen {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: {BACKGROUND_COLOR};
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
      }
    </style>

# Shortcuts configuration
shortcuts_configuration:
  common_shortcuts: |
    "shortcuts": [
      {
        "name": "Dashboard",
        "short_name": "Dashboard",
        "description": "View main dashboard",
        "url": "/dashboard",
        "icons": [
          {
            "src": "/images/shortcuts/dashboard-96x96.png",
            "sizes": "96x96",
            "type": "image/png"
          }
        ]
      },
      {
        "name": "Create Document",
        "short_name": "New Doc",
        "description": "Create a new document",
        "url": "/new-document",
        "icons": [
          {
            "src": "/images/shortcuts/new-document-96x96.png",
            "sizes": "96x96",
            "type": "image/png"
          }
        ]
      },
      {
        "name": "Reports",
        "short_name": "Reports",
        "description": "View and generate reports",
        "url": "/reports",
        "icons": [
          {
            "src": "/images/shortcuts/reports-96x96.png",
            "sizes": "96x96",
            "type": "image/png"
          }
        ]
      },
      {
        "name": "Settings",
        "short_name": "Settings",
        "description": "Application settings",
        "url": "/settings",
        "icons": [
          {
            "src": "/images/shortcuts/settings-96x96.png",
            "sizes": "96x96",
            "type": "image/png"
          }
        ]
      }
    ]

# Share target configuration
share_target:
  configuration: |
    "share_target": {
      "action": "/share",
      "method": "POST",
      "enctype": "multipart/form-data",
      "params": {
        "title": "title",
        "text": "text",
        "url": "url",
        "files": [
          {
            "name": "files",
            "accept": [
              "image/*",
              "text/plain",
              "application/pdf",
              "application/vnd.ms-excel",
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
              "text/csv"
            ]
          }
        ]
      }
    }

  handler_implementation: |
    // Handle shared content (in your app)
    app.post('/share', upload.array('files'), (req, res) => {
      const { title, text, url } = req.body;
      const files = req.files;
      
      // Process shared content
      if (files && files.length > 0) {
        // Handle shared files
        files.forEach(file => {
          // Process each shared file
          processSharedFile(file);
        });
      }
      
      if (text || url) {
        // Handle shared text or URL
        processSharedText(title, text, url);
      }
      
      // Redirect to appropriate page
      res.redirect('/shared-content');
    });

# File handlers
file_handlers:
  configuration: |
    "file_handlers": [
      {
        "action": "/file-handler",
        "accept": {
          "application/pdf": [".pdf"],
          "text/csv": [".csv"],
          "application/vnd.ms-excel": [".xls"],
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": [".xlsx"],
          "application/vnd.openxmlformats-officedocument.wordprocessingml.document": [".docx"],
          "text/plain": [".txt"],
          "application/json": [".json"]
        },
        "launch_type": "single-client"
      }
    ]

  handler_implementation: |
    // Handle file opening (in your app)
    app.get('/file-handler', (req, res) => {
      const fileUrl = req.query.file;
      
      if (fileUrl) {
        // Process the file URL
        // This could involve downloading, parsing, or displaying the file
        res.redirect(`/file-viewer?file=${encodeURIComponent(fileUrl)}`);
      } else {
        res.redirect('/');
      }
    });

# Protocol handlers
protocol_handlers:
  configuration: |
    "protocol_handlers": [
      {
        "protocol": "web+{app_name}",
        "url": "/handle-protocol?url=%s"
      },
      {
        "protocol": "mailto",
        "url": "/compose?to=%s"
      }
    ]

  implementation: |
    // Register custom protocol
    // Users can link to: web+myapp://action/param
    
    app.get('/handle-protocol', (req, res) => {
      const protocolUrl = req.query.url;
      
      if (protocolUrl) {
        const url = new URL(protocolUrl);
        const action = url.pathname.split('/')[1];
        const params = url.searchParams;
        
        switch (action) {
          case 'document':
            const docId = params.get('id');
            res.redirect(`/document/${docId}`);
            break;
          case 'create':
            const type = params.get('type');
            res.redirect(`/new/${type}`);
            break;
          default:
            res.redirect('/');
        }
      } else {
        res.redirect('/');
      }
    });

# Validation and testing
validation:
  manifest_validator: |
    // Validate manifest.json
    const validateManifest = (manifest) => {
      const errors = [];
      const warnings = [];
      
      // Required fields
      if (!manifest.name) errors.push('name is required');
      if (!manifest.start_url) errors.push('start_url is required');
      if (!manifest.display) warnings.push('display should be specified');
      
      // Icons validation
      if (!manifest.icons || manifest.icons.length === 0) {
        errors.push('At least one icon is required');
      } else {
        const has192 = manifest.icons.some(icon => icon.sizes.includes('192x192'));
        const has512 = manifest.icons.some(icon => icon.sizes.includes('512x512'));
        
        if (!has192) errors.push('192x192 icon is required');
        if (!has512) warnings.push('512x512 icon is recommended');
        
        // Check for maskable icons
        const hasMaskable = manifest.icons.some(icon => 
          icon.purpose && icon.purpose.includes('maskable')
        );
        if (!hasMaskable) warnings.push('Maskable icons are recommended');
      }
      
      // Theme colors
      if (!manifest.theme_color) warnings.push('theme_color is recommended');
      if (!manifest.background_color) warnings.push('background_color is recommended');
      
      return { errors, warnings };
    };

  pwa_checklist: |
    # PWA Manifest Checklist
    
    ## Required
    - [ ] name field is present
    - [ ] short_name field is present (12 characters or less)
    - [ ] start_url field is present
    - [ ] display field is set to 'standalone' or 'fullscreen'
    - [ ] icons array includes 192x192 and 512x512 sizes
    - [ ] Service worker is registered
    - [ ] Site is served over HTTPS
    
    ## Recommended
    - [ ] theme_color is specified
    - [ ] background_color is specified
    - [ ] description is provided
    - [ ] Maskable icons are included
    - [ ] Apple touch icons are provided
    - [ ] Shortcuts are defined
    - [ ] Screenshots are included
    - [ ] Offline functionality works
    
    ## Advanced
    - [ ] Share target is configured
    - [ ] File handlers are set up
    - [ ] Protocol handlers are defined
    - [ ] Categories are specified
    - [ ] Edge side panel is configured

# Manifest installation
installation:
  html_setup: |
    <!-- Include in HTML head -->
    <link rel="manifest" href="/manifest.json">
    <meta name="theme-color" content="{THEME_COLOR}">
    
    <!-- iOS Safari -->
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="default">
    <meta name="apple-mobile-web-app-title" content="{APP_SHORT_NAME}">
    <link rel="apple-touch-icon" href="/images/icons/apple-touch-icon-180x180.png">
    
    <!-- Microsoft -->
    <meta name="msapplication-TileColor" content="{THEME_COLOR}">
    <meta name="msapplication-TileImage" content="/images/icons/icon-144x144.png">

  server_configuration: |
    # Server configuration for manifest.json
    
    ## Apache (.htaccess)
    <Files "manifest.json">
      AddType application/manifest+json .json
    </Files>
    
    ## Nginx
    location ~* \.json$ {
      add_header Content-Type application/manifest+json;
    }
    
    ## Express.js
    app.get('/manifest.json', (req, res) => {
      res.setHeader('Content-Type', 'application/manifest+json');
      res.sendFile(path.join(__dirname, 'public', 'manifest.json'));
    });

# Best practices
best_practices:
  - "Use meaningful app name and short name"
  - "Provide high-quality icons in multiple sizes"
  - "Include maskable icons for better Android integration"
  - "Set appropriate theme and background colors"
  - "Use 'standalone' display mode for app-like experience"
  - "Include useful shortcuts for quick access"
  - "Provide screenshots for app stores"
  - "Configure share target for better integration"
  - "Test on multiple devices and browsers"
  - "Validate manifest with tools"
  - "Keep manifest.json in root directory"
  - "Use HTTPS for all PWA features"
  - "Implement proper fallbacks for unsupported features"
  - "Regular testing of install prompts"
  - "Monitor PWA metrics and usage"
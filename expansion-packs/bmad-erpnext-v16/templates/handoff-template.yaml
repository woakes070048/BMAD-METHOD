# Handoff Template for ERPNext Development Coordination
# Used for smooth transitions between agents during task execution

handoff_document:
  metadata:
    handoff_id: "HANDOFF-{YYYY}-{MM}-{DD}-{SEQ}"
    task_id: "{original_task_assignment_id}"
    handoff_date: "{timestamp}"
    handoff_type: # Select one
      - "planned_transition"      # Normal workflow progression
      - "expertise_escalation"    # Need specialized knowledge
      - "blocker_escalation"      # Hit a blocking issue
      - "capacity_transfer"       # Agent unavailable
      - "phase_completion"        # Moving to next phase
    
  from_agent:
    role: "{departing_agent_role}"
    name: "{departing_agent_identifier}"
    availability: "available_for_questions | limited_availability | unavailable"
    contact_method: "{preferred_contact}"
    
  to_agent:
    role: "{receiving_agent_role}"
    name: "{receiving_agent_identifier}"
    selected_because: "{rationale_for_selection}"
    onboarding_required: "yes | no"
    
  task_context:
    original_assignment:
      title: "{task_title}"
      description: "{brief_task_description}"
      priority: "P0 | P1 | P2 | P3"
      deadline: "{original_deadline}"
      
    business_context:
      purpose: "{why_this_task_matters}"
      stakeholders:
        - name: "{stakeholder_name}"
          role: "{stakeholder_role}"
          interest: "{what_they_care_about}"
      
      success_impact: "{what_success_looks_like}"
      failure_impact: "{risks_if_not_completed}"
      
  work_completed:
    summary: |
      {high_level_summary_of_completed_work}
    
    deliverables:
      - type: "code | documentation | configuration | design"
        description: "{what_was_created}"
        location: "{file_path_or_reference}"
        status: "complete | partial | draft"
        
    code_changes:
      files_modified:
        - path: "{file_path}"
          description: "{what_was_changed}"
          status: "tested | needs_testing | has_issues"
      
      files_created:
        - path: "{file_path}"
          purpose: "{why_created}"
          dependencies: "{what_it_depends_on}"
      
      branches:
        - name: "{branch_name}"
          status: "active | merged | abandoned"
          
    testing_status:
      unit_tests:
        written: "yes | no | partial"
        passing: "all | some | none"
        coverage: "{percentage}"
        
      integration_tests:
        written: "yes | no | partial"
        passing: "all | some | none"
        
      manual_testing:
        completed: "yes | no | partial"
        results: "{summary_of_results}"
        
  current_state:
    progress_percentage: "{0-100}"
    
    active_work:
      description: "{what_is_currently_in_progress}"
      location: "{where_to_find_it}"
      next_immediate_step: "{what_needs_doing_next}"
      
    environment_state:
      development_setup:
        - component: "{component_name}"
          status: "configured | needs_setup | broken"
          notes: "{relevant_details}"
      
      data_state:
        - doctype: "{doctype_name}"
          status: "created | populated | needs_data"
          sample_data_location: "{path_if_applicable}"
      
      configuration:
        - setting: "{setting_name}"
          value: "{current_value}"
          reason: "{why_this_value}"
          
  remaining_work:
    tasks:
      immediate: # Next 1-2 steps
        - description: "{task_description}"
          estimated_hours: "{number}"
          dependencies: "{what_must_be_done_first}"
          
      subsequent: # Following steps
        - description: "{task_description}"
          estimated_hours: "{number}"
          prerequisites: "{what_needs_to_exist}"
          
    decisions_needed:
      - question: "{decision_required}"
        context: "{why_this_matters}"
        options:
          - option: "{option_1}"
            pros: "{advantages}"
            cons: "{disadvantages}"
          - option: "{option_2}"
            pros: "{advantages}"
            cons: "{disadvantages}"
        recommendation: "{suggested_choice_and_why}"
        
  known_issues:
    blockers:
      - description: "{what_is_blocking}"
        attempted_solutions:
          - approach: "{what_was_tried}"
            result: "{what_happened}"
        suggested_next_steps: "{recommendations}"
        requires_escalation: "yes | no"
        
    warnings:
      - area: "{component_or_process}"
        issue: "{potential_problem}"
        impact: "{what_could_go_wrong}"
        mitigation: "{how_to_avoid_or_fix}"
        
    technical_debt:
      - description: "{what_needs_refactoring}"
        priority: "high | medium | low"
        estimated_effort: "{hours}"
        
  dependencies:
    external_systems:
      - system: "{system_name}"
        status: "connected | configured | needs_setup"
        credentials_location: "{secure_location}"
        contact_person: "{who_to_ask}"
        
    waiting_on:
      - type: "approval | data | decision | external_team"
        description: "{what_we_are_waiting_for}"
        expected_date: "{when_expected}"
        follow_up_person: "{who_to_contact}"
        
    integration_points:
      - app: "{app_name}"
        integration_type: "{api | webhook | direct}"
        status: "working | partial | broken"
        documentation: "{where_to_find_docs}"
        
  resources:
    documentation:
      - type: "requirements | technical | user | api"
        location: "{path_or_url}"
        relevance: "{why_this_matters}"
        
    tools_access:
      - tool: "{tool_name}"
        access_level: "configured | needs_setup"
        credentials: "{how_to_get_access}"
        
    reference_materials:
      - title: "{document_title}"
        location: "{path_or_url}"
        purpose: "{why_helpful}"
        
  recommendations:
    approach: |
      {suggested_approach_for_continuing_the_work}
    
    priorities:
      1: "{most_important_next_step}"
      2: "{second_priority}"
      3: "{third_priority}"
      
    expertise_needed:
      - skill: "{required_expertise}"
        reason: "{why_needed}"
        suggested_resource: "{person_or_documentation}"
        
    time_estimate:
      remaining_hours: "{number}"
      confidence_level: "high | medium | low"
      assumptions: "{what_this_estimate_assumes}"
      
  communication:
    announced_to:
      - channel: "{slack_channel_or_email_list}"
        message: "{what_was_communicated}"
        timestamp: "{when}"
        
    follow_up_needed:
      - with: "{person_or_team}"
        about: "{topic}"
        by_when: "{deadline}"
        
    questions_for_receiving_agent:
      - question: "{clarification_needed}"
        context: "{why_asking}"
        
  handoff_checklist:
    - [ ] All code changes committed and pushed
    - [ ] Documentation updated
    - [ ] Tests passing (or issues documented)
    - [ ] Environment state documented
    - [ ] Credentials and access verified
    - [ ] Known issues clearly described
    - [ ] Next steps clearly defined
    - [ ] Stakeholders notified
    - [ ] Receiving agent confirmed understanding
    - [ ] Knowledge transfer session scheduled (if needed)
    
  acknowledgment:
    from_agent_signature: "{departing_agent_confirms}"
    to_agent_signature: "{receiving_agent_confirms}"
    coordinator_review: "{coordinator_approval}"
    handoff_complete: "{timestamp}"
    
# Usage Instructions:
# 1. Initiate handoff when transition is needed
# 2. Departing agent fills out all sections
# 3. Review with receiving agent for clarity
# 4. Address any questions before finalizing
# 5. Both agents acknowledge the handoff
# 6. Coordinator reviews and approves
# 7. Archive for future reference

# Best Practices:
# - Be thorough but concise
# - Focus on actionable information
# - Include all context the next agent needs
# - Document all known issues honestly
# - Provide clear next steps
# - Make yourself available for questions initially

# Related Documents:
# - task-assignment-template.yaml
# - task-routing-guidelines.md
# - erpnext-technical-preferences.md
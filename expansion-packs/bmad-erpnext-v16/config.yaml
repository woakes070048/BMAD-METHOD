name: bmad-erpnext-v16
version: 3.0.0
short-title: ERPNext v16 Native Vue Builder
description: >-
  Complete BMAD expansion pack for building modern ERPNext v16 apps with native Vue integration.
  Includes Vue 3 with Frappe's asset pipeline, native PWA support, and comprehensive migration tools.
  Features 33 specialized AI agents with Warehouse 13 & Eureka character names.
author: BMAD Team
slashPrefix: bmadErpNext

metadata:
  target_framework: "Frappe Framework v16"
  target_application: "ERPNext v16"
  compatibility:
    frappe: ">=16.0.0,<17.0.0"
    erpnext: ">=16.0.0,<17.0.0"
  dependencies:
    - "frappe"
    - "erpnext"
  optional_dependencies:
    - "payments"
  frontend_stack:
    - "Vue 3 (native integration)"
    - "Frappe's built-in esbuild pipeline"
    - "frappe-ui"
    - "Bootstrap 4 (Frappe default)"
    - "Pinia"
  character_theme: "Warehouse 13 & Eureka TV series"
  total_agents: 33
  
  # UNIVERSAL SAFETY SYSTEM
  safety_system:
    universal_workflow_required: true
    universal_workflow_name: "universal-context-detection-workflow"
    context_types: ["TROUBLESHOOTING", "NEW_DEVELOPMENT", "ENHANCEMENT", "MIGRATION"]
    panic_detection: active
    mandatory_changelog: true
    attempt_limits: 3
  
# Slash Commands Configuration
slash_commands:
  agent_pattern: "/bmadErpNext:agent:{agent-id}"
  examples:
    - "/bmadErpNext:agent:erpnext-product-owner"
    - "/bmadErpNext:agent:vue-spa-architect" 
    - "/bmadErpNext:agent:api-architect"
    - "/bmadErpNext:agent:doctype-designer"
    - "/bmadErpNext:agent:bench-operator"
  
# Documentation Links
documentation:
  main_guide: "CLAUDE.md"
  quick_reference: "TEAM-QUICK-REFERENCE.md"
  troubleshooting: "TROUBLESHOOTING.md"
  safety_protocols: "SAFETY-PROTOCOL-IMPLEMENTATION-SUMMARY.md"
  installation: "INSTALLATION.md"

# CUSTOMIZE THESE SETTINGS FOR YOUR ENVIRONMENT
environment:
  # Default bench path (update for your environment)
  bench_path: "/home/frappe/frappe-bench"
  
  # Default site name (update for your environment)
  primary_site: "your-site.localhost"
  
  # Update this to your user (usually 'frappe' or your system user)
  user: "frappe"
  
  # Update this to your development directory
  development_directory: "/home/frappe/frappe-bench/apps/your_custom_app"
  
# UPDATE THIS SECTION WITH YOUR EXISTING APPS
existing_apps:
  installed:
    - name: "frappe"
      version: "16.0.0"  # Update with your version
      status: "active"
    
    - name: "erpnext"
      version: "16.0.0"  # Update with your version
      status: "active"
    
    # Add your existing custom apps here
    # Example:
    # - name: "your_custom_app"
    #   type: "custom"
    #   description: "Your custom application description"
    #   version: "1.0.0"
    #   status: "active"
    
    # DocFlow - Workflow Management System (uncomment if you have it)
    # - name: "docflow"
    #   type: "custom"
    #   description: "Comprehensive document flow and workflow management system"
    #   version: "active"
    #   integration_points:
    #     - "Multi-stage approval workflows"
    #     - "Document routing and state management"
    #     - "Role-based task assignments"
    #     - "Intelligent workload balancing"
    #     - "Parallel and sequential processing"
    #   supported_features:
    #     - "Sales process workflows"
    #     - "Purchase approval chains"
    #     - "Quality assurance processes"
    #     - "Generic approval workflows"
    #   agents_aware:
    #     - "workflow-specialist"
    #     - "bench-operator"
    #     - "testing-specialist"
    #     - "doctype-designer"
    
    # Server Manager - If present in your environment
    # - name: "server_manager"
    #   type: "custom"
    #   description: "Server and infrastructure management"
    #   integration_points:
    #     - "server_monitoring"
    #     - "deployment_management"
    #   validation_required: true
    #   structure_validator: "app-structure-validator"
    
    # n8n Integration - Automation Platform
    # - name: "n8n_integration"
    #   type: "custom"
    #   description: "Automation and workflow integration with n8n"
    #   integration_points:
    #     - "webhook_triggers"
    #     - "external_api_integration"
    #     - "automated_workflows"
    #     - "data_synchronization"
  
  available:
    - name: "erpnext"
      version: "16.x"
      status: "ready_to_install"
    - name: "payments"
      version: "16.x"
      status: "ready_to_install"

agents:
  core:
    - "erpnext-architect"
    - "bench-operator"
    - "doctype-designer"
    - "api-developer"
    - "workflow-specialist"
    - "testing-specialist"
    - "vue-spa-architect"
    - "frappe-ui-developer"
    - "api-architect"
    - "pwa-specialist"
    - "app-scaffold-coordinator"
    - "code-cleanup-specialist"
  project_management:
    - "erpnext-product-owner"
    - "erpnext-scrum-master"
    - "erpnext-qa-lead"
    - "development-coordinator"
  frontend:
    - "vue-spa-architect"
    - "frappe-ui-developer"
    - "ui-layout-designer"
    - "pwa-specialist"
    - "mobile-ui-specialist"
  backend:
    - "api-architect"
    - "api-developer"
    - "doctype-designer"
    - "data-integration-expert"
    - "workspace-architect"
  business_analysis:
    - "business-analyst"
  quality_control:
    - "pre-check-agent"
    - "post-check-agent"
  requirements:
    - "prd-generator"
  structure_management:
    - "structure-manager"
  utilities:
    - "jinja-template-specialist"
    - "app-scaffold-coordinator"
    - "code-cleanup-specialist"
  compliance:
    - "frappe-compliance-validator"
    - "structure-compliance-agent"
  debugging:
    - "diagnostic-specialist"
    - "refactoring-expert"
  documentation:
    - "documentation-specialist"
  auditing:
    - "app-auditor"
  orchestration:
    - "workflow-orchestrator"
  
agent_teams:
  modern_app_team:
    - "vue-spa-architect"
    - "frappe-ui-developer"
    - "api-architect"
    - "doctype-designer"
    - "pwa-specialist"
    - "jinja-template-specialist"
  development_team:
    - "erpnext-architect"
    - "doctype-designer"
    - "api-developer"
    - "data-integration-expert"
    - "jinja-template-specialist"
  deployment_team:
    - "bench-operator"
    - "testing-specialist"
    - "frappe-compliance-validator"
  workflow_team:
    - "workflow-specialist"
    - "api-developer"
    - "testing-specialist"
  business_analysis_team:
    - "business-analyst"
    - "erpnext-architect"
    - "doctype-designer"
    - "api-architect"
    - "jinja-template-specialist"
  n8n_conversion_team:
    - "n8n-workflow-analyst"
    - "workflow-converter"
    - "trigger-mapper"
    - "api-developer"
    - "jinja-template-specialist"
  airtable_migration_team:
    - "airtable-analyzer"
    - "business-analyst"
    - "doctype-designer"
    - "api-developer"
    - "data-integration-expert"
    - "jinja-template-specialist"
  automation_team:
    - "workflow-converter"
    - "trigger-mapper"
    - "workflow-specialist"
    - "api-developer"
  mobile_team:
    - "mobile-ui-specialist"
    - "pwa-specialist"
    - "vue-spa-architect"
    - "api-architect"
  complete_app_scaffolding_team:
    - "app-scaffold-coordinator"
    - "erpnext-architect"
    - "business-analyst"
    - "vue-spa-architect"
    - "frappe-ui-developer"
    - "api-architect"
  troubleshooting_team:
    - "diagnostic-specialist"
    - "refactoring-expert"
    - "bench-operator"
    - "testing-specialist"
  security_validation_team:
    - "frappe-compliance-validator"
    - "testing-specialist"
    - "diagnostic-specialist"
  validation_team:
    - "diagnostic-specialist"
    - "testing-specialist"
    - "frappe-compliance-validator"

templates:
  core:
    - "doctype-template.yaml"
    - "api-endpoint-template.yaml"
    - "workflow-template.yaml"
    - "test-template.yaml"
    - "vue-native-template.yaml"
    - "api-module-template.yaml"
    - "frappe-ui-component-template.yaml"
  coordination:
    - "task-assignment-template.yaml"
    - "handoff-template.yaml"
  ui_design:
    - "ui-design-spec-template.yaml"
    - "component-mapping-template.yaml"
  debugging:
    - "error-diagnosis-template.yaml"
    - "refactoring-plan-template.yaml"
  validation:
    - "component-mapping-template.yaml"
  automation:
    - "n8n-to-erpnext-template.yaml"
  migration:
    - "n8n-to-erpnext-template.yaml"

tasks:
  development:
    - "create-doctype.md"
    - "create-api-endpoint.md"
    - "setup-workflow.md"
    - "create-unit-tests.md"
    - "create-vue-components.md"
    - "scaffold-complete-app.md"
    - "create-api-module.md"
  frontend:
    - "create-vue-components.md"
    - "design-ui-from-doctypes.md"
    - "create-multi-doctype-view.md"
    - "scaffold-complete-app.md"
  deployment:
    - "install-app.md"
    - "run-migrations.md"
    - "run-tests.md"
    - "build-frontend.md"
  integration:
    - "integrate-docflow.md"
    - "setup-n8n-triggers.md"
  automation:
    - "convert-n8n-workflow.md"
  migration:
    - "convert-n8n-workflow.md"
  scaffolding:
    - "scaffold-complete-app.md"
  debugging:
    - "diagnose-runtime-error.md"
    - "refactor-existing-code.md"
  documentation:
    - "generate-api-documentation.md"
    - "create-user-guide.md"
  validation:
    - "comprehensive-validation-orchestration.md"
    - "pre-deployment-verification.md"

workflows:
  # UNIVERSAL SAFETY WORKFLOW - MANDATORY FOR ALL AGENTS
  universal_context_detection:
    description: "Universal context detection and safety initialization - MANDATORY for all agents"
    mandatory: true
    cannot_skip: true
    stages:
      - "context_detection"
      - "context_specific_gathering" 
      - "safety_initialization"
    
  # CORE SAFETY WORKFLOWS
  structure_validation:
    description: "App structure validation and compliance checking"
    agent: "app-structure-validator"
    prerequisites: ["universal_context_detection"]
  
  audit:
    description: "Comprehensive app auditing and validation"
    agent: "app-auditor"
    prerequisites: ["universal_context_detection"]
  
  coordination:
    description: "Multi-agent coordination and task routing"
    agent: "main-dev-coordinator"
    prerequisites: ["universal_context_detection"]
  
  refactoring:
    description: "Safe code refactoring with comprehensive safety monitoring"
    agent: "refactoring-expert"
    prerequisites: ["universal_context_detection"]
  
  documentation:
    description: "Documentation creation and maintenance"
    agent: "documentation-specialist"
    prerequisites: ["universal_context_detection"]
  
  diagnostic:
    description: "Diagnostic and troubleshooting with context-adaptive safety"
    agent: "diagnostic-specialist"
    prerequisites: ["universal_context_detection"]
  
  # APPLICATION DEVELOPMENT WORKFLOWS
  modern_app_development:
    - "analyze_requirements"
    - "design_architecture"
    - "setup_app_structure"
    - "create_vue_spa"
    - "create_doctypes"
    - "build_api_modules"
    - "implement_frappe_ui"
    - "add_pwa_capabilities"
    - "setup_workflows"
    - "create_tests"
    - "build_and_deploy"
  
  app_development:
    - "analyze_requirements"
    - "design_architecture"
    - "create_doctypes"
    - "build_apis"
    - "setup_workflows"
    - "create_tests"
    - "deploy_and_validate"
  
  enhancement:
    - "analyze_existing_system"
    - "plan_integration"
    - "implement_changes"
    - "test_compatibility"
    - "deploy_updates"
  
  business_analysis_to_app:
    - "conduct_business_analysis"
    - "identify_requirements"
    - "design_solution_architecture"
    - "create_functional_specifications"
    - "develop_custom_doctypes"
    - "implement_business_logic"
    - "setup_workflows_and_automation"
    - "create_reports_and_dashboards"
    - "implement_integrations"
    - "conduct_testing"
    - "train_users_and_deploy"
  
  n8n_workflow_conversion:
    - "analyze_n8n_workflow"
    - "map_triggers_to_erpnext"
    - "convert_workflow_logic"
    - "generate_erpnext_code"
    - "implement_automation"
    - "setup_webhooks_and_apis"
    - "configure_scheduled_jobs"
    - "test_converted_workflow"
    - "deploy_and_validate"
  
  airtable_to_erpnext_migration:
    - "analyze_airtable_base"
    - "map_tables_to_doctypes"
    - "design_data_migration_strategy"
    - "create_erpnext_structure"
    - "develop_migration_scripts"
    - "execute_data_migration"
    - "validate_migrated_data"
    - "recreate_automations_and_workflows"
    - "train_users_on_erpnext"
    - "go_live_and_support"
  
  combined_airtable_n8n_conversion:
    - "analyze_airtable_and_n8n_systems"
    - "identify_integration_points"
    - "design_unified_erpnext_solution"
    - "migrate_airtable_data"
    - "convert_n8n_workflows"
    - "implement_unified_automation"
    - "create_comprehensive_solution"
    - "test_end_to_end_functionality"
    - "deploy_complete_system"
  
  complete_app_scaffolding:
    - "multi_agent_discovery_and_analysis"
    - "doctype_relationship_mapping"
    - "business_context_analysis"
    - "ui_complexity_assessment"
    - "coordinated_design_phase"
    - "relationship_validation"
    - "component_design_strategy"
    - "performance_optimization_planning"
    - "coordinated_generation_phase"
    - "foundation_setup"
    - "tiered_component_generation"
    - "relationship_integration"
    - "backend_api_integration"
    - "performance_optimization_implementation"
    - "testing_and_validation"
  
  doctype_to_frontend:
    - "doctype_design_validation"
    - "ui_layout_design"
    - "component_implementation"
    - "api_integration"
    - "testing_optimization"

data:
  reference:
    - "frappe-field-types.yaml"
    - "erpnext-patterns.yaml"
    - "api-patterns.yaml"
    - "workflow-patterns.yaml"
    - "testing-patterns.yaml"
    - "frappe-ui-components.md"
    - "frappe-ui-patterns.md"
    - "vue-spa-patterns.md"
    - "vue-spa-architecture.md"
    - "pegas-starter-guide.md"
    - "api-whitelisting-guide.md"
    - "pwa-implementation.md"
    - "modern-app-architecture.md"
    - "mobile-desktop-patterns.md"
    - "data-fetching-patterns.md"
    - "erpnext-vue-integration.md"
    - "n8n-node-mappings.yaml"
    - "frappe-functionality-audit.md"
    - "frappe-first-principles.md"
    - "dry-principles-guide.md"
    - "anti-patterns.md"
    - "frappe-ui-style-guide.md"
    - "error-patterns-library.md"
    - "validation-patterns.yaml"

guides:
  development_stages:
    - "STAGE-1-PRODUCT-OWNER-GUIDE.md"
    - "STAGE-2-BUSINESS-ANALYST-GUIDE.md"
    - "STAGE-3-SCRUM-MASTER-GUIDE.md"
    - "STAGE-4-DEVELOPER-GUIDE.md"
    - "STAGE-5-QA-LEAD-GUIDE.md"
    - "STAGE-6-PROJECT-MANAGER-GUIDE.md"
  reference:
    - "PRD-TO-TASKS-GUIDE.md"
    - "BMAD-VUE-DESIGN-SPEC.md"

checklists:
  development:
    - "app-creation-checklist.md"
    - "development-checklist.md"
    - "doctype-creation-checklist.md"
    - "code-review-checklist.md"
    - "api-development-checklist.md"
  frontend:
    - "vue-spa-checklist.md"
    - "frappe-ui-compliance.md"
  security:
    - "security-checklist.md"
    - "api-security-checklist.md"
  performance:
    - "performance-checklist.md"
  deployment:
    - "deployment-checklist.md"
  testing:
    - "testing-checklist.md"
  documentation:
    - "documentation-checklist.md"
  integration:
    - "multi-app-compatibility.md"
  validation:
    - "code-change-preflight-checklist.md"

integration:
  existing_systems:
    # DocFlow Integration - EXAMPLE (uncomment if you have DocFlow)
    # docflow:
    #   description: "Comprehensive workflow management system with document flow capabilities"
    #   status: "active"
    #   integration_points:
    #     - "Use docflow for complex multi-stage approval processes"
    #     - "Leverage existing workflow templates (sales, purchase, QA)"
    #     - "Maintain compatibility with docflow APIs"
    #     - "Intelligent user assignment with workload balancing"
    #     - "Automatic stage execution and state management"
    #   supported_workflows:
    #     - "Sales process (Lead → Opportunity → Quotation → Order)"
    #     - "Purchase approval chains with multi-level authorization"
    #     - "Quality assurance and testing workflows"
    #     - "Generic approval processes with escalation"
    #   considerations:
    #     - "Check docflow version compatibility before updates"
    #     - "Test workflow triggers after app changes"
    #     - "Validate data flow between DocFlow and DocTypes"
    #     - "Monitor workflow performance and completion times"
    #     - "Ensure proper permissions for workflow stages"
    #   best_practices:
    #     - "Use workflow-specialist agent for DocFlow tasks"
    #     - "Run integrate-docflow.md task for new integrations"
    #     - "Test with testing-specialist for multi-app compatibility"
    #     - "Monitor with DocFlow dashboard components"
    
    # Server Manager Integration - If present
    # server_manager:
    #   description: "Server and infrastructure management application"
    #   status: "requires_validation"
    #   integration_points:
    #     - "Server monitoring and management"
    #     - "Deployment automation"
    #     - "Infrastructure as code"
    #   validation_requirements:
    #     - "Use app-structure-validator (Eva Thorne) before changes"
    #     - "Run validate-app-structure.md task"
    #     - "Check for import violations and anti-patterns"
    #     - "Ensure naming convention compliance"
    #   considerations:
    #     - "Historical structural issues require extra validation"
    #     - "Use enforcement tasks to maintain compliance"
    #     - "Monitor for anti-patterns continuously"
    
    # n8n Integration - Automation Platform
    # n8n_integration:
    #   description: "Automation platform integration with n8n workflows"
    #   integration_points:
    #     - "Webhook triggers for external systems"
    #     - "Automated data synchronization"
    #     - "Event-driven process automation"
    #     - "External API integrations"
    #   considerations:
    #     - "Test webhook endpoints thoroughly"
    #     - "Validate n8n workflow configurations"
    #     - "Check authentication and security"
    #     - "Monitor API rate limits"
  
  migration_capabilities:
    n8n_workflows:
      description: "Convert n8n workflows to ERPNext automation"
      capabilities:
        - "Analyze n8n workflow JSON structure"
        - "Map n8n nodes to ERPNext functionality"
        - "Generate ERPNext automation code"
        - "Create webhook endpoints and API handlers"
        - "Convert triggers to ERPNext events"
        - "Implement scheduled jobs from cron triggers"
      agents:
        - "n8n-workflow-analyst"
        - "workflow-converter"
        - "trigger-mapper"
    
    airtable_bases:
      description: "Migrate Airtable databases to ERPNext"
      capabilities:
        - "Analyze Airtable base structure"
        - "Map Airtable fields to ERPNext field types"
        - "Convert relationships and formulas"
        - "Generate migration scripts"
        - "Validate data integrity"
        - "Recreate views as ERPNext reports"
      agents:
        - "airtable-analyzer"
        - "business-analyst"
    
    business_analysis:
      description: "Comprehensive business process analysis"
      capabilities:
        - "Conduct stakeholder interviews"
        - "Document current processes"
        - "Design ERPNext solutions"
        - "Create functional specifications"
        - "Plan implementation roadmaps"
        - "Estimate costs and timelines"
      agents:
        - "business-analyst"
        - "erpnext-architect"

# CUSTOMIZE THESE SETTINGS FOR YOUR PREFERENCES
settings:
  # BMAD Method alignment
  bmad_method:
    planning_workflow: bmad-planning-workflow
    development_workflow: bmad-development-workflow
    enforce_frappe_first: true
    block_external_libraries: true
    
  # Environment mode controls
  environment:
    mode: development          # Options: development, production
    enforce_modern_patterns: true
    prevent_legacy_functions: true
    erpnext_version: "v16"
    frappe_framework: true
    
  # Structure enforcement settings
  structure:
    max_file_lines: 500        # Preferred maximum lines per file
    enforce_directory_rules: true
    refactor_threshold: 1000  # Files exceeding this will be refactored
    doctype_naming: PascalCase
    api_pattern: "@frappe.whitelist()"
    
  # Review and validation settings
  review:
    require_pre_check: false   # Optional in BMAD Method
    require_post_check: false  # Optional in BMAD Method
    test_architect_review: recommended
    risk_assessment_threshold: 6
    
  # Quality gates configuration
  quality_gates:
    enabled: true
    advisory_only: true       # Gates are advisory, not blocking
    require_coverage: 70      # Minimum test coverage
    critical_path_coverage: 100
    security_coverage: 100
    
  development:
    auto_reload: true
    debug_mode: true           # Set to false for production
    log_level: "DEBUG"         # Use "INFO" for production
    
  frontend:
    native_vue_integration: true
    frappe_build_pipeline: true
    frappe_ui_version: "0.1.171"  # Update to latest version as needed
    bootstrap_styling: true
    pwa_enabled: true
  
  testing:
    run_parallel_tests: false     # Set to true if your system can handle it
    test_timeout: 300             # Adjust based on your system performance
    coverage_threshold: 80        # Adjust coverage requirements
    frontend_tests: true
  
  deployment:
    backup_before_deploy: true
    validate_before_deploy: true
    rollback_on_failure: true
    build_frontend: true
    optimize_bundle: true
  
  automation:
    n8n_api_timeout: 30           # Adjust based on your n8n instance
    webhook_retry_attempts: 3
    background_job_timeout: 300
    migration_batch_size: 100     # Adjust based on your system capacity
  
  migration:
    airtable_api_timeout: 60      # Adjust based on your Airtable plan
    data_validation_enabled: true
    create_backup_before_migration: true
    preserve_original_ids: true   # Useful for maintaining references

# SETUP INSTRUCTIONS:
# 1. Copy this file to config.yaml: cp config.yaml.example config.yaml
# 2. Update the environment section with your actual paths and site name
# 3. Update the existing_apps section with your installed apps
# 4. Customize the settings section according to your preferences
# 5. Uncomment and configure integration sections if you have those systems
# 6. Save and test with: claude *expansion-pack bmad-erpnext-v16*